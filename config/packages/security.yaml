security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\InMemoryUser: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        my_memory_provider:
          memory:
            users:
              # php bin/console security:hash-password --no-interaction admin
              admin: { roles: [ROLE_ADMIN], password: '$2y$13$J.i4IloLQzfqdoP4t0w34Oud/ETpnc681hILW36hN.Ng5.LkZsli2' } # password: admin

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            http_basic:
                realm: Stop
            stateless: true
            lazy: true
            provider: my_memory_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }
